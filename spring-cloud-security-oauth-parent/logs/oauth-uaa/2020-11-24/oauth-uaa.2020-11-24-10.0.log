2020-11-24 10:05:26.600 [background-preinit] INFO  org.hibernate.validator.internal.util.Version.<clinit>:21 - HV000001: Hibernate Validator 6.0.21.Final
2020-11-24 10:05:26.676 [main] INFO  c.c.f.f.internals.provider.DefaultApplicationProvider.initAppId:116 - App ID is set to spring-security by app.id property from /META-INF/app.properties
2020-11-24 10:05:26.678 [main] INFO  c.c.f.f.internals.provider.DefaultServerProvider.initEnvType:108 - Environment is set to [dev] by JVM system property 'env'.
2020-11-24 10:05:26.706 [main] INFO  c.c.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress:42 - Located meta services from apollo.meta configuration: http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000!
2020-11-24 10:05:26.709 [main] INFO  com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress:93 - Located meta server address http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-11-24 10:05:27.527 [main] INFO  spring.cloud.security.oauth.uaa.jwt.UuaJwtApplication.logStartupProfileInfo:651 - No active profile set, falling back to default profiles: default
2020-11-24 10:05:27.912 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'clientDetailsService' defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/AuthorizationConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=authorizationConfiguration; factoryMethodName=clientDetailsService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/AuthorizationConfiguration.class]] for bean 'clientDetailsService': There is already [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/security/oauth2/config/annotation/configuration/ClientDetailsServiceConfiguration.class]] bound.
2020-11-24 10:05:27.917 [main] INFO  o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-24 10:05:27.938 [main] ERROR o.s.boot.diagnostics.LoggingFailureAnalysisReporter.report:40 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'clientDetailsService', defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/AuthorizationConfiguration.class], could not be registered. A bean with that name has already been defined in BeanDefinition defined in class path resource [org/springframework/security/oauth2/config/annotation/configuration/ClientDetailsServiceConfiguration.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2020-11-24 10:24:03.153 [background-preinit] INFO  org.hibernate.validator.internal.util.Version.<clinit>:21 - HV000001: Hibernate Validator 6.0.21.Final
2020-11-24 10:24:03.228 [main] INFO  c.c.f.f.internals.provider.DefaultApplicationProvider.initAppId:116 - App ID is set to spring-security by app.id property from /META-INF/app.properties
2020-11-24 10:24:03.230 [main] INFO  c.c.f.f.internals.provider.DefaultServerProvider.initEnvType:108 - Environment is set to [dev] by JVM system property 'env'.
2020-11-24 10:24:03.260 [main] INFO  c.c.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress:42 - Located meta services from apollo.meta configuration: http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000!
2020-11-24 10:24:03.264 [main] INFO  com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress:93 - Located meta server address http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-11-24 10:24:04.183 [main] INFO  spring.cloud.security.oauth.uaa.jwt.UuaJwtApplication.logStartupProfileInfo:651 - No active profile set, falling back to default profiles: default
2020-11-24 10:24:04.568 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'clientDetailsService' defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/AuthorizationConfiguration.class]: Cannot register bean definition [Root bean: class [null]; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=authorizationConfiguration; factoryMethodName=clientDetailsService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/AuthorizationConfiguration.class]] for bean 'clientDetailsService': There is already [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [org/springframework/security/oauth2/config/annotation/configuration/ClientDetailsServiceConfiguration.class]] bound.
2020-11-24 10:24:04.574 [main] INFO  o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-24 10:24:04.577 [main] ERROR o.s.boot.diagnostics.LoggingFailureAnalysisReporter.report:40 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'clientDetailsService', defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/AuthorizationConfiguration.class], could not be registered. A bean with that name has already been defined in BeanDefinition defined in class path resource [org/springframework/security/oauth2/config/annotation/configuration/ClientDetailsServiceConfiguration.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2020-11-24 10:25:29.363 [background-preinit] INFO  org.hibernate.validator.internal.util.Version.<clinit>:21 - HV000001: Hibernate Validator 6.0.21.Final
2020-11-24 10:25:29.464 [main] INFO  c.c.f.f.internals.provider.DefaultApplicationProvider.initAppId:116 - App ID is set to spring-security by app.id property from /META-INF/app.properties
2020-11-24 10:25:29.466 [main] INFO  c.c.f.f.internals.provider.DefaultServerProvider.initEnvType:108 - Environment is set to [dev] by JVM system property 'env'.
2020-11-24 10:25:29.503 [main] INFO  c.c.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress:42 - Located meta services from apollo.meta configuration: http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000!
2020-11-24 10:25:29.506 [main] INFO  com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress:93 - Located meta server address http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-11-24 10:25:30.282 [main] INFO  spring.cloud.security.oauth.uaa.jwt.UuaJwtApplication.logStartupProfileInfo:651 - No active profile set, falling back to default profiles: default
2020-11-24 10:25:30.879 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-24 10:25:30.882 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-24 10:25:30.913 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 - Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020-11-24 10:25:31.190 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId:295 - BeanFactory id=3856b476-fe96-39c7-a883-d9b825a38b17
2020-11-24 10:25:31.429 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@689faf79' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-24 10:25:31.435 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-24 10:25:31.689 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 - Tomcat initialized with port(s): 50020 (http)
2020-11-24 10:25:31.699 [main] INFO  org.apache.coyote.http11.Http11NioProtocol.log:173 - Initializing ProtocolHandler ["http-nio-50020"]
2020-11-24 10:25:31.699 [main] INFO  org.apache.catalina.core.StandardService.log:173 - Starting service [Tomcat]
2020-11-24 10:25:31.700 [main] INFO  org.apache.catalina.core.StandardEngine.log:173 - Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-24 10:25:31.824 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/uaa].log:173 - Initializing Spring embedded WebApplicationContext
2020-11-24 10:25:31.824 [main] INFO  o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:283 - Root WebApplicationContext: initialization completed in 1524 ms
2020-11-24 10:25:31.971 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext.refresh:559 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authorizationConfiguration': Unsatisfied dependency expressed through field 'tokenStore'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tokenStore' defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/TokenConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.TokenStore]: Factory method 'tokenStore' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'assessTokenConverter' defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/TokenConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter]: Factory method 'assessTokenConverter' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/security/jwt/crypto/sign/MacSigner
2020-11-24 10:25:31.972 [main] INFO  org.apache.catalina.core.StandardService.log:173 - Stopping service [Tomcat]
2020-11-24 10:25:31.983 [main] INFO  o.s.b.a.logging.ConditionEvaluationReportLoggingListener.logMessage:136 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-11-24 10:25:32.011 [main] ERROR org.springframework.boot.SpringApplication.reportFailure:826 - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'authorizationConfiguration': Unsatisfied dependency expressed through field 'tokenStore'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tokenStore' defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/TokenConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.TokenStore]: Factory method 'tokenStore' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'assessTokenConverter' defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/TokenConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter]: Factory method 'assessTokenConverter' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/security/jwt/crypto/sign/MacSigner
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:130)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:593)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:897)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:879)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:551)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at spring.cloud.security.oauth.uaa.jwt.UuaJwtApplication.main(UuaJwtApplication.java:36)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tokenStore' defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/TokenConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.TokenStore]: Factory method 'tokenStore' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'assessTokenConverter' defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/TokenConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter]: Factory method 'assessTokenConverter' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/security/jwt/crypto/sign/MacSigner
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1307)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1227)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640)
	... 19 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.TokenStore]: Factory method 'tokenStore' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'assessTokenConverter' defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/TokenConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter]: Factory method 'assessTokenConverter' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/security/jwt/crypto/sign/MacSigner
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'assessTokenConverter' defined in class path resource [spring/cloud/security/oauth/uaa/jwt/config/TokenConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter]: Factory method 'assessTokenConverter' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/security/jwt/crypto/sign/MacSigner
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:483)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1176)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:556)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:516)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:324)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:362)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:334)
	at spring.cloud.security.oauth.uaa.jwt.config.TokenConfiguration$$EnhancerBySpringCGLIB$$a2f6536e.assessTokenConverter(<generated>)
	at spring.cloud.security.oauth.uaa.jwt.config.TokenConfiguration.tokenStore(TokenConfiguration.java:44)
	at spring.cloud.security.oauth.uaa.jwt.config.TokenConfiguration$$EnhancerBySpringCGLIB$$a2f6536e.CGLIB$tokenStore$1(<generated>)
	at spring.cloud.security.oauth.uaa.jwt.config.TokenConfiguration$$EnhancerBySpringCGLIB$$a2f6536e$$FastClassBySpringCGLIB$$d382dde9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at spring.cloud.security.oauth.uaa.jwt.config.TokenConfiguration$$EnhancerBySpringCGLIB$$a2f6536e.tokenStore(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter]: Factory method 'assessTokenConverter' threw exception; nested exception is java.lang.NoClassDefFoundError: org/springframework/security/jwt/crypto/sign/MacSigner
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:650)
	... 56 common frames omitted
Caused by: java.lang.NoClassDefFoundError: org/springframework/security/jwt/crypto/sign/MacSigner
	at org.springframework.security.oauth2.provider.token.store.JwtAccessTokenConverter.<init>(JwtAccessTokenConverter.java:74)
	at spring.cloud.security.oauth.uaa.jwt.config.TokenConfiguration.assessTokenConverter(TokenConfiguration.java:50)
	at spring.cloud.security.oauth.uaa.jwt.config.TokenConfiguration$$EnhancerBySpringCGLIB$$a2f6536e.CGLIB$assessTokenConverter$0(<generated>)
	at spring.cloud.security.oauth.uaa.jwt.config.TokenConfiguration$$EnhancerBySpringCGLIB$$a2f6536e$$FastClassBySpringCGLIB$$d382dde9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at spring.cloud.security.oauth.uaa.jwt.config.TokenConfiguration$$EnhancerBySpringCGLIB$$a2f6536e.assessTokenConverter(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 57 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.springframework.security.jwt.crypto.sign.MacSigner
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	... 69 common frames omitted
2020-11-24 10:27:07.142 [background-preinit] INFO  org.hibernate.validator.internal.util.Version.<clinit>:21 - HV000001: Hibernate Validator 6.0.21.Final
2020-11-24 10:27:07.231 [main] INFO  c.c.f.f.internals.provider.DefaultApplicationProvider.initAppId:116 - App ID is set to spring-security by app.id property from /META-INF/app.properties
2020-11-24 10:27:07.233 [main] INFO  c.c.f.f.internals.provider.DefaultServerProvider.initEnvType:108 - Environment is set to [dev] by JVM system property 'env'.
2020-11-24 10:27:07.284 [main] INFO  c.c.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress:42 - Located meta services from apollo.meta configuration: http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000!
2020-11-24 10:27:07.296 [main] INFO  com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress:93 - Located meta server address http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-11-24 10:27:08.434 [main] INFO  spring.cloud.security.oauth.uaa.jwt.UuaJwtApplication.logStartupProfileInfo:651 - No active profile set, falling back to default profiles: default
2020-11-24 10:27:09.054 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-24 10:27:09.056 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-24 10:27:09.085 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 - Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020-11-24 10:27:09.384 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId:295 - BeanFactory id=3856b476-fe96-39c7-a883-d9b825a38b17
2020-11-24 10:27:09.690 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@357f6391' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-24 10:27:09.696 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-24 10:27:10.030 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 - Tomcat initialized with port(s): 50020 (http)
2020-11-24 10:27:10.041 [main] INFO  org.apache.coyote.http11.Http11NioProtocol.log:173 - Initializing ProtocolHandler ["http-nio-50020"]
2020-11-24 10:27:10.041 [main] INFO  org.apache.catalina.core.StandardService.log:173 - Starting service [Tomcat]
2020-11-24 10:27:10.042 [main] INFO  org.apache.catalina.core.StandardEngine.log:173 - Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-24 10:27:10.169 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/uaa].log:173 - Initializing Spring embedded WebApplicationContext
2020-11-24 10:27:10.169 [main] INFO  o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:283 - Root WebApplicationContext: initialization completed in 1713 ms
2020-11-24 10:27:10.349 [main] WARN  o.s.s.o.provider.token.store.JwtAccessTokenConverter.afterPropertiesSet:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-11-24 10:27:11.176 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>:121 - No URLs will be polled as dynamic configuration sources.
2020-11-24 10:27:11.177 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-24 10:27:11.181 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>:121 - No URLs will be polled as dynamic configuration sources.
2020-11-24 10:27:11.181 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-24 10:27:11.328 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor.initialize:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-24 10:27:12.113 [main] INFO  o.s.security.web.DefaultSecurityFilterChain.<init>:43 - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4d4f6121, org.springframework.security.web.context.SecurityContextPersistenceFilter@7dc6ce7d, org.springframework.security.web.header.HeaderWriterFilter@7ebefdfa, org.springframework.security.web.authentication.logout.LogoutFilter@71ea9a0d, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@34ccce55, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@74a46f81, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@521981d9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@76737130, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2845fd12, org.springframework.security.web.session.SessionManagementFilter@751eb9a9, org.springframework.security.web.access.ExceptionTranslationFilter@1390cc4c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@257f1509]
2020-11-24 10:27:12.127 [main] INFO  o.s.security.web.DefaultSecurityFilterChain.<init>:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15b54cb7, org.springframework.security.web.context.SecurityContextPersistenceFilter@3759ea4d, org.springframework.security.web.header.HeaderWriterFilter@32107bba, org.springframework.security.web.authentication.logout.LogoutFilter@28d07fa4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@19c28c97, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@398a27e, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4f03729f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7c75f3a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d099a37, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d7f49f3, org.springframework.security.web.session.SessionManagementFilter@102bce96, org.springframework.security.web.access.ExceptionTranslationFilter@4d20d8e6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@79296ce0]
2020-11-24 10:27:12.486 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs:78 - Eureka HTTP Client uses Jersey
2020-11-24 10:27:12.757 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning:86 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-11-24 10:27:12.864 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory.create:72 - Setting initial instance status as: STARTING
2020-11-24 10:27:12.897 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>:371 - Initializing Eureka in region us-east-1
2020-11-24 10:27:13.175 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70 - Using JSON encoding codec LegacyJacksonJson
2020-11-24 10:27:13.175 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71 - Using JSON decoding codec LegacyJacksonJson
2020-11-24 10:27:13.475 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80 - Using XML encoding codec XStreamXml
2020-11-24 10:27:13.475 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81 - Using XML decoding codec XStreamXml
2020-11-24 10:27:13.665 [main] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 10:27:13.776 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1004 - Disable delta property : false
2020-11-24 10:27:13.776 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1005 - Single vip registry refresh property : null
2020-11-24 10:27:13.776 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1006 - Force full registry fetch : false
2020-11-24 10:27:13.776 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1007 - Application is null : false
2020-11-24 10:27:13.776 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1008 - Registered Applications size is zero : true
2020-11-24 10:27:13.777 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1010 - Application version is -1: true
2020-11-24 10:27:13.777 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1093 - Getting all instance registry info from the eureka server
2020-11-24 10:27:13.964 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1102 - The response status is 200
2020-11-24 10:27:13.968 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks:1317 - Starting heartbeat executor: renew interval is: 30
2020-11-24 10:27:13.971 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-11-24 10:27:13.975 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>:491 - Discovery Client initialized at timestamp 1606184833974 with initial instances count: 6
2020-11-24 10:27:13.980 [main] INFO  o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.register:41 - Registering application SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT with eureka with status UP
2020-11-24 10:27:13.981 [main] INFO  com.netflix.discovery.DiscoveryClient.notify:1353 - Saw local status change event StatusChangeEvent [timestamp=1606184833981, current=UP, previous=STARTING]
2020-11-24 10:27:13.984 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register:870 - DiscoveryClient_SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT/DESKTOP-RRR8AD9:spring-cloud-security-oauth-uua-jwt:50020: registering service...
2020-11-24 10:27:14.000 [main] INFO  org.apache.coyote.http11.Http11NioProtocol.log:173 - Starting ProtocolHandler ["http-nio-50020"]
2020-11-24 10:27:14.037 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 - Tomcat started on port(s): 50020 (http) with context path '/uaa'
2020-11-24 10:27:14.038 [main] INFO  o.s.c.n.e.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent:145 - Updating port to 50020
2020-11-24 10:27:14.041 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register:879 - DiscoveryClient_SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT/DESKTOP-RRR8AD9:spring-cloud-security-oauth-uua-jwt:50020 - registration status: 204
2020-11-24 10:27:14.245 [main] INFO  spring.cloud.security.oauth.uaa.jwt.UuaJwtApplication.logStarted:61 - Started UuaJwtApplication in 7.91 seconds (JVM running for 9.003)
2020-11-24 10:32:13.781 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 10:32:16.815 [http-nio-50020-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/uaa].log:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-24 10:32:16.815 [http-nio-50020-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet.initServletBean:525 - Initializing Servlet 'dispatcherServlet'
2020-11-24 10:32:16.822 [http-nio-50020-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet.initServletBean:547 - Completed initialization in 7 ms
2020-11-24 10:32:28.596 [http-nio-50020-exec-2] INFO  com.zaxxer.hikari.HikariDataSource.getConnection:110 - HikariCP - Starting...
2020-11-24 10:32:28.752 [http-nio-50020-exec-2] INFO  com.zaxxer.hikari.HikariDataSource.getConnection:123 - HikariCP - Start completed.
2020-11-24 10:32:52.035 [http-nio-50020-exec-6] INFO  o.s.s.oauth2.provider.endpoint.AuthorizationEndpoint.handleOAuth2Exception:574 - Handling OAuth2 error: error="invalid_scope", error_description="Invalid scope: all", scope="ROLE_ADMIN ROLE_USER ROLE_API"
2020-11-24 10:37:13.783 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 10:42:13.784 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 10:46:04.835 [http-nio-50020-exec-8] INFO  o.s.s.oauth2.provider.endpoint.AuthorizationEndpoint.handleClientRegistrationException:568 - Handling ClientRegistrationException error: No client with requested id: c1
2020-11-24 10:47:11.817 [SpringContextShutdownHook] INFO  o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.deregister:65 - Unregistering application SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT with eureka with status DOWN
2020-11-24 10:47:11.818 [SpringContextShutdownHook] WARN  com.netflix.discovery.DiscoveryClient.notify:1351 - Saw local status change event StatusChangeEvent [timestamp=1606186031818, current=DOWN, previous=UP]
2020-11-24 10:47:11.818 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register:870 - DiscoveryClient_SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT/DESKTOP-RRR8AD9:spring-cloud-security-oauth-uua-jwt:50020: registering service...
2020-11-24 10:47:11.825 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register:879 - DiscoveryClient_SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT/DESKTOP-RRR8AD9:spring-cloud-security-oauth-uua-jwt:50020 - registration status: 204
2020-11-24 10:47:11.838 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-11-24 10:47:11.840 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close:350 - HikariCP - Shutdown initiated...
2020-11-24 10:47:11.845 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close:352 - HikariCP - Shutdown completed.
2020-11-24 10:47:11.845 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient.shutdown:932 - Shutting down DiscoveryClient ...
2020-11-24 10:47:16.088 [background-preinit] INFO  org.hibernate.validator.internal.util.Version.<clinit>:21 - HV000001: Hibernate Validator 6.0.21.Final
2020-11-24 10:47:16.167 [main] INFO  c.c.f.f.internals.provider.DefaultApplicationProvider.initAppId:116 - App ID is set to spring-security by app.id property from /META-INF/app.properties
2020-11-24 10:47:16.169 [main] INFO  c.c.f.f.internals.provider.DefaultServerProvider.initEnvType:108 - Environment is set to [dev] by JVM system property 'env'.
2020-11-24 10:47:16.197 [main] INFO  c.c.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress:42 - Located meta services from apollo.meta configuration: http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000!
2020-11-24 10:47:16.200 [main] INFO  com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress:93 - Located meta server address http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-11-24 10:47:17.056 [main] INFO  spring.cloud.security.oauth.uaa.jwt.UuaJwtApplication.logStartupProfileInfo:651 - No active profile set, falling back to default profiles: default
2020-11-24 10:47:17.658 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-24 10:47:17.661 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-24 10:47:17.693 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 - Finished Spring Data repository scanning in 15ms. Found 0 Redis repository interfaces.
2020-11-24 10:47:18.005 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId:295 - BeanFactory id=3856b476-fe96-39c7-a883-d9b825a38b17
2020-11-24 10:47:18.253 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5a05dd30' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-24 10:47:18.258 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-24 10:47:18.513 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 - Tomcat initialized with port(s): 50020 (http)
2020-11-24 10:47:18.524 [main] INFO  org.apache.coyote.http11.Http11NioProtocol.log:173 - Initializing ProtocolHandler ["http-nio-50020"]
2020-11-24 10:47:18.525 [main] INFO  org.apache.catalina.core.StandardService.log:173 - Starting service [Tomcat]
2020-11-24 10:47:18.525 [main] INFO  org.apache.catalina.core.StandardEngine.log:173 - Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-24 10:47:18.687 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/uaa].log:173 - Initializing Spring embedded WebApplicationContext
2020-11-24 10:47:18.687 [main] INFO  o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:283 - Root WebApplicationContext: initialization completed in 1616 ms
2020-11-24 10:47:18.861 [main] WARN  o.s.s.o.provider.token.store.JwtAccessTokenConverter.afterPropertiesSet:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-11-24 10:47:19.633 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>:121 - No URLs will be polled as dynamic configuration sources.
2020-11-24 10:47:19.634 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-24 10:47:19.638 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>:121 - No URLs will be polled as dynamic configuration sources.
2020-11-24 10:47:19.638 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-24 10:47:19.790 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor.initialize:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-24 10:47:20.587 [main] INFO  o.s.security.web.DefaultSecurityFilterChain.<init>:43 - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b3b25ad, org.springframework.security.web.context.SecurityContextPersistenceFilter@e7529ac, org.springframework.security.web.header.HeaderWriterFilter@b079fa2, org.springframework.security.web.authentication.logout.LogoutFilter@3ebfe048, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@751e7d99, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5a95090a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b17aa0b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20894afb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f507d33, org.springframework.security.web.session.SessionManagementFilter@1b52f723, org.springframework.security.web.access.ExceptionTranslationFilter@3f7030b5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@795d43d9]
2020-11-24 10:47:20.599 [main] INFO  o.s.security.web.DefaultSecurityFilterChain.<init>:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36117f63, org.springframework.security.web.context.SecurityContextPersistenceFilter@1440a166, org.springframework.security.web.header.HeaderWriterFilter@445265b0, org.springframework.security.web.authentication.logout.LogoutFilter@98dc042, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@48028e11, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@7a461744, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@1227862a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74f6237, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@50e7f88b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@55ed76e6, org.springframework.security.web.session.SessionManagementFilter@7eba962d, org.springframework.security.web.access.ExceptionTranslationFilter@34f4fd04, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@75364777]
2020-11-24 10:47:20.958 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs:78 - Eureka HTTP Client uses Jersey
2020-11-24 10:47:21.296 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning:86 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-11-24 10:47:21.460 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory.create:72 - Setting initial instance status as: STARTING
2020-11-24 10:47:21.510 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>:371 - Initializing Eureka in region us-east-1
2020-11-24 10:47:21.892 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70 - Using JSON encoding codec LegacyJacksonJson
2020-11-24 10:47:21.893 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71 - Using JSON decoding codec LegacyJacksonJson
2020-11-24 10:47:22.065 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80 - Using XML encoding codec XStreamXml
2020-11-24 10:47:22.065 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81 - Using XML decoding codec XStreamXml
2020-11-24 10:47:22.516 [main] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 10:47:22.653 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1004 - Disable delta property : false
2020-11-24 10:47:22.653 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1005 - Single vip registry refresh property : null
2020-11-24 10:47:22.653 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1006 - Force full registry fetch : false
2020-11-24 10:47:22.653 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1007 - Application is null : false
2020-11-24 10:47:22.653 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1008 - Registered Applications size is zero : true
2020-11-24 10:47:22.654 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1010 - Application version is -1: true
2020-11-24 10:47:22.654 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1093 - Getting all instance registry info from the eureka server
2020-11-24 10:47:22.946 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1102 - The response status is 200
2020-11-24 10:47:22.951 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks:1317 - Starting heartbeat executor: renew interval is: 30
2020-11-24 10:47:22.956 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-11-24 10:47:22.962 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>:491 - Discovery Client initialized at timestamp 1606186042960 with initial instances count: 8
2020-11-24 10:47:22.968 [main] INFO  o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.register:41 - Registering application SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT with eureka with status UP
2020-11-24 10:47:22.969 [main] INFO  com.netflix.discovery.DiscoveryClient.notify:1353 - Saw local status change event StatusChangeEvent [timestamp=1606186042969, current=UP, previous=STARTING]
2020-11-24 10:47:22.972 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register:870 - DiscoveryClient_SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT/DESKTOP-RRR8AD9:spring-cloud-security-oauth-uua-jwt:50020: registering service...
2020-11-24 10:47:22.993 [main] INFO  org.apache.coyote.http11.Http11NioProtocol.log:173 - Starting ProtocolHandler ["http-nio-50020"]
2020-11-24 10:47:23.038 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register:879 - DiscoveryClient_SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT/DESKTOP-RRR8AD9:spring-cloud-security-oauth-uua-jwt:50020 - registration status: 204
2020-11-24 10:47:23.039 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 - Tomcat started on port(s): 50020 (http) with context path '/uaa'
2020-11-24 10:47:23.041 [main] INFO  o.s.c.n.e.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent:145 - Updating port to 50020
2020-11-24 10:47:23.372 [main] INFO  spring.cloud.security.oauth.uaa.jwt.UuaJwtApplication.logStarted:61 - Started UuaJwtApplication in 8.089 seconds (JVM running for 9.377)
2020-11-24 10:48:07.352 [http-nio-50020-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/uaa].log:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-24 10:48:07.352 [http-nio-50020-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet.initServletBean:525 - Initializing Servlet 'dispatcherServlet'
2020-11-24 10:48:07.359 [http-nio-50020-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet.initServletBean:547 - Completed initialization in 7 ms
2020-11-24 10:48:36.224 [http-nio-50020-exec-7] INFO  com.zaxxer.hikari.HikariDataSource.getConnection:110 - HikariCP - Starting...
2020-11-24 10:48:36.360 [http-nio-50020-exec-7] INFO  com.zaxxer.hikari.HikariDataSource.getConnection:123 - HikariCP - Start completed.
2020-11-24 10:49:51.017 [HikariCP housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool.run:787 - HikariCP - Thread starvation or clock leap detected (housekeeper delta=1m14s555ms994µs139ns).
2020-11-24 10:49:51.021 [http-nio-50020-exec-6] INFO  o.s.s.oauth2.provider.endpoint.AuthorizationEndpoint.handleOAuth2Exception:574 - Handling OAuth2 error: error="invalid_scope", error_description="Invalid scope: all", scope="ROLE_ADMIN ROLE_USER ROLE_API"
2020-11-24 10:50:50.184 [http-nio-50020-exec-5] ERROR o.a.c.c.C.[.[localhost].[/uaa].[dispatcherServlet].log:175 - Servlet.service() for servlet [dispatcherServlet] in context with path [/uaa] threw exception [Request processing failed; nested exception is java.lang.IllegalArgumentException: java.io.NotSerializableException: spring.cloud.security.oath.common.bean.entity.Role] with root cause
java.io.NotSerializableException: spring.cloud.security.oath.common.bean.entity.Role
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at java.util.ArrayList.writeObject(ArrayList.java:762)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1028)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.springframework.security.oauth2.common.util.SerializationUtils.serialize(SerializationUtils.java:18)
	at org.springframework.security.oauth2.provider.code.JdbcAuthorizationCodeServices.store(JdbcAuthorizationCodeServices.java:43)
	at org.springframework.security.oauth2.provider.code.RandomValueAuthorizationCodeServices.createAuthorizationCode(RandomValueAuthorizationCodeServices.java:23)
	at org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.generateCode(AuthorizationEndpoint.java:421)
	at org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.getAuthorizationCodeResponse(AuthorizationEndpoint.java:369)
	at org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(AuthorizationEndpoint.java:272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:52)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:216)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-11-24 10:51:30.231 [SpringContextShutdownHook] INFO  o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.deregister:65 - Unregistering application SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT with eureka with status DOWN
2020-11-24 10:51:30.231 [SpringContextShutdownHook] WARN  com.netflix.discovery.DiscoveryClient.notify:1351 - Saw local status change event StatusChangeEvent [timestamp=1606186290231, current=DOWN, previous=UP]
2020-11-24 10:51:30.231 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register:870 - DiscoveryClient_SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT/DESKTOP-RRR8AD9:spring-cloud-security-oauth-uua-jwt:50020: registering service...
2020-11-24 10:51:30.237 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register:879 - DiscoveryClient_SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT/DESKTOP-RRR8AD9:spring-cloud-security-oauth-uua-jwt:50020 - registration status: 204
2020-11-24 10:51:30.250 [SpringContextShutdownHook] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor.shutdown:218 - Shutting down ExecutorService 'applicationTaskExecutor'
2020-11-24 10:51:30.252 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close:350 - HikariCP - Shutdown initiated...
2020-11-24 10:51:30.256 [SpringContextShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource.close:352 - HikariCP - Shutdown completed.
2020-11-24 10:51:30.256 [SpringContextShutdownHook] INFO  com.netflix.discovery.DiscoveryClient.shutdown:932 - Shutting down DiscoveryClient ...
2020-11-24 10:51:37.702 [background-preinit] INFO  org.hibernate.validator.internal.util.Version.<clinit>:21 - HV000001: Hibernate Validator 6.0.21.Final
2020-11-24 10:51:37.781 [main] INFO  c.c.f.f.internals.provider.DefaultApplicationProvider.initAppId:116 - App ID is set to spring-security by app.id property from /META-INF/app.properties
2020-11-24 10:51:37.783 [main] INFO  c.c.f.f.internals.provider.DefaultServerProvider.initEnvType:108 - Environment is set to [dev] by JVM system property 'env'.
2020-11-24 10:51:37.815 [main] INFO  c.c.framework.apollo.internals.DefaultMetaServerProvider.initMetaServerAddress:42 - Located meta services from apollo.meta configuration: http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000!
2020-11-24 10:51:37.817 [main] INFO  com.ctrip.framework.apollo.core.MetaDomainConsts.initMetaServerAddress:93 - Located meta server address http://192.168.206.11:9000,http://192.168.206.66:9000,http://192.168.206.127:9000 for env DEV from com.ctrip.framework.apollo.internals.DefaultMetaServerProvider
2020-11-24 10:51:38.658 [main] INFO  spring.cloud.security.oauth.uaa.jwt.UuaJwtApplication.logStartupProfileInfo:651 - No active profile set, falling back to default profiles: default
2020-11-24 10:51:39.195 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-11-24 10:51:39.198 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-11-24 10:51:39.224 [main] INFO  o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 - Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2020-11-24 10:51:39.515 [main] INFO  org.springframework.cloud.context.scope.GenericScope.setSerializationId:295 - BeanFactory id=3856b476-fe96-39c7-a883-d9b825a38b17
2020-11-24 10:51:39.716 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@448c92fc' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-24 10:51:39.722 [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:335 - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-11-24 10:51:39.957 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:91 - Tomcat initialized with port(s): 50020 (http)
2020-11-24 10:51:39.967 [main] INFO  org.apache.coyote.http11.Http11NioProtocol.log:173 - Initializing ProtocolHandler ["http-nio-50020"]
2020-11-24 10:51:39.968 [main] INFO  org.apache.catalina.core.StandardService.log:173 - Starting service [Tomcat]
2020-11-24 10:51:39.968 [main] INFO  org.apache.catalina.core.StandardEngine.log:173 - Starting Servlet engine: [Apache Tomcat/9.0.39]
2020-11-24 10:51:40.092 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/uaa].log:173 - Initializing Spring embedded WebApplicationContext
2020-11-24 10:51:40.092 [main] INFO  o.s.b.w.s.context.ServletWebServerApplicationContext.prepareWebApplicationContext:283 - Root WebApplicationContext: initialization completed in 1417 ms
2020-11-24 10:51:40.247 [main] WARN  o.s.s.o.provider.token.store.JwtAccessTokenConverter.afterPropertiesSet:302 - Unable to create an RSA verifier from verifierKey (ignoreable if using MAC)
2020-11-24 10:51:41.009 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>:121 - No URLs will be polled as dynamic configuration sources.
2020-11-24 10:51:41.010 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-24 10:51:41.015 [main] WARN  com.netflix.config.sources.URLConfigurationSource.<init>:121 - No URLs will be polled as dynamic configuration sources.
2020-11-24 10:51:41.015 [main] INFO  com.netflix.config.sources.URLConfigurationSource.<init>:122 - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2020-11-24 10:51:41.156 [main] INFO  o.s.scheduling.concurrent.ThreadPoolTaskExecutor.initialize:181 - Initializing ExecutorService 'applicationTaskExecutor'
2020-11-24 10:51:41.843 [main] INFO  o.s.security.web.DefaultSecurityFilterChain.<init>:43 - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68c06a2, org.springframework.security.web.context.SecurityContextPersistenceFilter@1b52f723, org.springframework.security.web.header.HeaderWriterFilter@3f7030b5, org.springframework.security.web.authentication.logout.LogoutFilter@8cc5602, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@74aa29c7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@35738a92, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e7529ac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e9db5e7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a95090a, org.springframework.security.web.session.SessionManagementFilter@b079fa2, org.springframework.security.web.access.ExceptionTranslationFilter@3287cf03, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11a8735d]
2020-11-24 10:51:41.854 [main] INFO  o.s.security.web.DefaultSecurityFilterChain.<init>:43 - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@26ab3c1b, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c04188, org.springframework.security.web.header.HeaderWriterFilter@f507d33, org.springframework.security.web.authentication.logout.LogoutFilter@34f4fd04, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@348b26e0, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@641bd93e, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@98dc042, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@76a41af0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a1148f2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47c14360, org.springframework.security.web.session.SessionManagementFilter@1fc02a84, org.springframework.security.web.access.ExceptionTranslationFilter@2b3b25ad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a429813]
2020-11-24 10:51:42.132 [main] INFO  o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration.discoveryClientOptionalArgs:78 - Eureka HTTP Client uses Jersey
2020-11-24 10:51:42.386 [main] WARN  o.s.c.l.c.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerClientRibbonWarnLogger.logWarning:86 - You already have RibbonLoadBalancerClient on your classpath. It will be used by default. As Spring Cloud Ribbon is in maintenance mode. We recommend switching to BlockingLoadBalancerClient instead. In order to use it, set the value of `spring.cloud.loadbalancer.ribbon.enabled` to `false` or remove spring-cloud-starter-netflix-ribbon from your project.
2020-11-24 10:51:42.513 [main] INFO  o.s.cloud.netflix.eureka.InstanceInfoFactory.create:72 - Setting initial instance status as: STARTING
2020-11-24 10:51:42.545 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>:371 - Initializing Eureka in region us-east-1
2020-11-24 10:51:42.817 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70 - Using JSON encoding codec LegacyJacksonJson
2020-11-24 10:51:42.818 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71 - Using JSON decoding codec LegacyJacksonJson
2020-11-24 10:51:42.930 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80 - Using XML encoding codec XStreamXml
2020-11-24 10:51:42.931 [main] INFO  com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81 - Using XML decoding codec XStreamXml
2020-11-24 10:51:43.303 [main] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 10:51:43.414 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1004 - Disable delta property : false
2020-11-24 10:51:43.415 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1005 - Single vip registry refresh property : null
2020-11-24 10:51:43.415 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1006 - Force full registry fetch : false
2020-11-24 10:51:43.415 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1007 - Application is null : false
2020-11-24 10:51:43.415 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1008 - Registered Applications size is zero : true
2020-11-24 10:51:43.415 [main] INFO  com.netflix.discovery.DiscoveryClient.fetchRegistry:1010 - Application version is -1: true
2020-11-24 10:51:43.415 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1093 - Getting all instance registry info from the eureka server
2020-11-24 10:51:43.592 [main] INFO  com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1102 - The response status is 200
2020-11-24 10:51:43.596 [main] INFO  com.netflix.discovery.DiscoveryClient.initScheduledTasks:1317 - Starting heartbeat executor: renew interval is: 30
2020-11-24 10:51:43.599 [main] INFO  com.netflix.discovery.InstanceInfoReplicator.<init>:60 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2020-11-24 10:51:43.603 [main] INFO  com.netflix.discovery.DiscoveryClient.<init>:491 - Discovery Client initialized at timestamp 1606186303602 with initial instances count: 8
2020-11-24 10:51:43.607 [main] INFO  o.s.c.n.eureka.serviceregistry.EurekaServiceRegistry.register:41 - Registering application SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT with eureka with status UP
2020-11-24 10:51:43.607 [main] INFO  com.netflix.discovery.DiscoveryClient.notify:1353 - Saw local status change event StatusChangeEvent [timestamp=1606186303607, current=UP, previous=STARTING]
2020-11-24 10:51:43.610 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register:870 - DiscoveryClient_SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT/DESKTOP-RRR8AD9:spring-cloud-security-oauth-uua-jwt:50020: registering service...
2020-11-24 10:51:43.622 [main] INFO  org.apache.coyote.http11.Http11NioProtocol.log:173 - Starting ProtocolHandler ["http-nio-50020"]
2020-11-24 10:51:43.652 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer.start:203 - Tomcat started on port(s): 50020 (http) with context path '/uaa'
2020-11-24 10:51:43.652 [DiscoveryClient-InstanceInfoReplicator-0] INFO  com.netflix.discovery.DiscoveryClient.register:879 - DiscoveryClient_SPRING-CLOUD-SECURITY-OAUTH-UUA-JWT/DESKTOP-RRR8AD9:spring-cloud-security-oauth-uua-jwt:50020 - registration status: 204
2020-11-24 10:51:43.653 [main] INFO  o.s.c.n.e.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent:145 - Updating port to 50020
2020-11-24 10:51:43.864 [main] INFO  spring.cloud.security.oauth.uaa.jwt.UuaJwtApplication.logStarted:61 - Started UuaJwtApplication in 6.978 seconds (JVM running for 8.087)
2020-11-24 10:51:54.066 [http-nio-50020-exec-1] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/uaa].log:173 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-11-24 10:51:54.066 [http-nio-50020-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet.initServletBean:525 - Initializing Servlet 'dispatcherServlet'
2020-11-24 10:51:54.076 [http-nio-50020-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet.initServletBean:547 - Completed initialization in 10 ms
2020-11-24 10:51:57.543 [http-nio-50020-exec-3] INFO  com.zaxxer.hikari.HikariDataSource.getConnection:110 - HikariCP - Starting...
2020-11-24 10:51:57.686 [http-nio-50020-exec-3] INFO  com.zaxxer.hikari.HikariDataSource.getConnection:123 - HikariCP - Start completed.
2020-11-24 10:56:43.420 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:01:43.424 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:06:43.425 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:11:43.427 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:16:43.430 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:21:43.431 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:26:43.434 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:31:43.437 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:36:43.439 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:41:43.440 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:46:43.441 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:51:43.444 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 11:56:43.446 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:01:43.448 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:06:43.450 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:11:43.453 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:16:43.455 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:21:43.457 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:26:43.459 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:31:43.460 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:36:43.462 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:41:43.465 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:46:43.468 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:51:43.470 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 12:56:43.472 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:01:43.475 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:06:43.477 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:11:43.478 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:16:43.480 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:21:43.482 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:26:43.485 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:31:43.487 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:36:43.490 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:41:43.492 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:46:43.493 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:51:43.495 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 13:56:43.498 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:01:43.499 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:06:43.500 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:11:43.501 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:16:43.503 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:21:43.505 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:26:43.507 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:31:43.509 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:36:43.510 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:41:43.511 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:46:43.514 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:51:43.517 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 14:56:43.518 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:01:43.519 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:06:43.521 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:11:43.522 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:16:43.523 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:21:43.525 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:26:43.527 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:31:43.528 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:36:43.529 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:41:43.530 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:46:43.533 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:51:43.535 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 15:56:43.537 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:01:43.538 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:06:43.540 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:11:43.542 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:16:43.544 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:21:43.547 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:26:43.550 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:31:43.551 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:36:43.553 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:41:43.555 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:46:43.558 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:51:43.559 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 16:56:43.561 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 17:01:43.562 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 17:06:43.564 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 17:11:43.566 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 17:16:43.569 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 17:21:43.572 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 17:26:43.573 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 17:31:43.575 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 17:36:43.577 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
2020-11-24 17:41:43.578 [AsyncResolver-bootstrap-executor-0] INFO  c.n.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43 - Resolving eureka endpoints via configuration
